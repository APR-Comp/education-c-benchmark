--- Lab-7/3076-295738//295738_buggy.c	2023-11-27 20:53:21.292461003 +0200
+++ Lab-7/3076-295738//Main.c	2023-11-27 20:53:21.292461003 +0200
@@ -1,64 +1,64 @@
+/*
+Up to 20% marks will be allotted for good programming practice. These include
+- Comments: for nontrivial code
+- Indentation: align your code properly
+- Function use and modular programming
+- Usage of string.h is NOT allowed. Do not include anything in the header other
+than what is already given in the template.
+--------------------------------------------------------------------------------------------------------------
+
+Write a program to swap the first-half with the second-half of the given string,
+and print the final string.
+
+Input Format:
+A string of at most 100 characters. There is no whitespace.
+
+Output Format:
+Transformed string.
+
+Example 1:
+Input:
+abcdef
+
+Output:
+defabc
+
+Example 2:
+Input:
+hello-@programmer
+
+Output:
+ogrammerrhello-@p
+
+*/
 #include <stdio.h>
-#include <stdlib.h>
 
-int strLen(char var__0[]) {
-  int var__1;
-  if (0) {
-  } else {
-    var__1 = 2;
-    while (var__0[(*(&((*(&(var__1))))))] != '\0') {
-      if (0) {
-      } else {
-        {}
-      };
-      (*(&((*(&((*(&(var__1)))))))))++;
-    }
-  }
-  if (0) {
-  } else {
-    return (*(&((*(&((*(&(var__1)))))))));
+int strLen(char str[]) {
+  int i;
+  for (i = 0; str[i] != '\0'; i++) {
   }
+
+  return i;
 }
-void swapStr(char var__0[]) {
-  int var__1, var__2 = strLen((*(&((*(&((*(&(var__0))))))))));
-  char var__3;
-  if (1) {
-    (*(&((*(&((*(&(var__1))))))))) = 0;
-    while (var__1 < (*(&(var__2))) / 2) {
-      if (1) {
-        {
-          if (0) {
-          } else {
-            (*(&((*(&((*(&(var__3))))))))) = (*(&((*(&(var__0))))))[var__1];
-          }
-          if (1) {
-            (*(&((*(&(var__0))))))[(*(&(var__1)))] =
-                var__0[(var__2 + 1) / 2 + (*(&(var__1)))];
-          }
-          if (1) {
-            (*(&((*(&(var__0))))))[(var__2 + 1) / 2 + (*(&((*(&(var__1))))))] =
-                var__3;
-          }
-        }
-      };
-      (*(&((*(&(var__1))))))++;
-    }
+
+void swapStr(char str[]) // swap the two halves
+{
+  int i, len = strLen(str);
+  char temp;
+
+  for (i = 0; i < len / 2; i++) {
+    temp = str[i];
+    str[i] = str[(len + 1) / 2 + i];
+    str[(len + 1) / 2 + i] = temp;
   }
 }
+
 int main() {
-  char var__0[100];
-  (*(&((*(&(scanf))))))("%s", (*(&((*(&(var__0)))))));
-  int var__4;
-  if (0) {
-  } else {
-    scanf("%d", &(*(&((*(&((*(&(var__4))))))))));
-  }
-  if (1) {
-    swapStr((*(&((*(&(var__0)))))));
-  }
-  if (0) {
-  } else {
-    printf("%s", (*(&((*(&((*(&(var__0))))))))));
-  }
+  char str[100];
+  scanf("%s", str);
+  int n;
+  scanf("%d", &n);
+  swapStr(str);
+  printf("%s", str);
   return 0;
-}
+}
\ No newline at end of file
