--- Lab-7/3076-295686//295686_buggy.c	2023-11-27 20:53:21.292461003 +0200
+++ Lab-7/3076-295686//Main.c	2023-11-27 20:53:21.292461003 +0200
@@ -1,79 +1,64 @@
+/*
+Up to 20% marks will be allotted for good programming practice. These include
+- Comments: for nontrivial code
+- Indentation: align your code properly
+- Function use and modular programming
+- Usage of string.h is NOT allowed. Do not include anything in the header other
+than what is already given in the template.
+--------------------------------------------------------------------------------------------------------------
+
+Write a program to swap the first-half with the second-half of the given string,
+and print the final string.
+
+Input Format:
+A string of at most 100 characters. There is no whitespace.
+
+Output Format:
+Transformed string.
+
+Example 1:
+Input:
+abcdef
+
+Output:
+defabc
+
+Example 2:
+Input:
+hello-@programmer
+
+Output:
+ogrammerrhello-@p
+
+*/
 #include <stdio.h>
-#include <stdlib.h>
 
-int main() {
-  char var__0[100], var__1[100];
-  int var__2 = (*(&(getchar)))();
-  int var__4 = 0, var__5;
-  (*(&(var__4))) = 0;
-  while ((*(&((*(&(var__2)))))) != -1) {
-    {
-      if (0) {
-      } else {
-        (*(&((*(&(var__0))))))[(*(&((*(&(var__4))))))] =
-            (*(&((*(&((*(&(var__2)))))))));
-      }
-      if (0) {
-      } else {
-        (*(&((*(&((*(&(var__2))))))))) = (*(&((*(&(getchar))))))();
-      }
-    };
-    (*(&((*(&((*(&(var__4)))))))))++;
-  }
-  int var__6;
-  (*(&((*(&(var__6)))))) = 0;
-  while (var__6 < (((*(&((*(&(var__4)))))) + 1) / 2)) {
-    {
-      if (1) {
-        (*(&((*(&(var__5)))))) = (*(&((*(&((*(&(var__6))))))))) +
-                                 (((*(&((*(&((*(&(var__4))))))))) + 1 / 2));
-      }
-      if (1) {
-        (*(&((*(&(var__1))))))[(*(&(var__6)))] =
-            (*(&((*(&((*(&(var__0)))))))))[var__5];
-      }
-    };
-    var__6++;
+int strLen(char str[]) {
+  int i;
+  for (i = 0; str[i] != '\0'; i++) {
   }
-  if (1) {
-    if (!(*(&(var__4))) % 2 != 0) {
-    } else {
-      {
-        (*(&((*(&(var__1))))))[(*(&(var__6))) - 1] =
-            var__0[(*(&((*(&((*(&(var__6))))))))) - 1];
-      }
-    }
-  }
-  if (1) {
-    while ((var__6 < (*(&((*(&(var__4)))))))) {
-      {
-        (*(&((*(&((*(&(var__5))))))))) =
-            (*(&((*(&(var__6)))))) - ((var__4 + 1) / 2);
-        if (0) {
-        } else {
-          (*(&(var__1)))[(*(&(var__6)))] =
-              (*(&((*(&((*(&(var__0)))))))))[(*(&((*(&(var__5))))))];
-        }
-      };
-      (*(&((*(&(var__6))))))++;
-    }
-  }
-  if (1) {
-    int var__7 = 0;
-    while ((*(&((*(&((*(&(var__7))))))))) < (*(&((*(&((*(&(var__4)))))))))) {
-      if (1) {
-        {
-          if (0) {
-          } else {
-            (*(&((*(&((*(&(printf)))))))))(
-                "%c", (*(&((*(&(var__1))))))[(*(&(var__7)))]);
-          }
-        }
-      };
-      (*(&(var__7)))++;
-    }
-  }
-  if (1) {
-    return 0;
+
+  return i;
+}
+
+void swapStr(char str[]) // swap the two halves
+{
+  int i, len = strLen(str);
+  char temp;
+
+  for (i = 0; i < len / 2; i++) {
+    temp = str[i];
+    str[i] = str[(len + 1) / 2 + i];
+    str[(len + 1) / 2 + i] = temp;
   }
 }
+
+int main() {
+  char str[100];
+  scanf("%s", str);
+  int n;
+  scanf("%d", &n);
+  swapStr(str);
+  printf("%s", str);
+  return 0;
+}
\ No newline at end of file
