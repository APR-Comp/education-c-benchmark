--- Lab-4/2825-271203//271203_buggy.c	2023-12-25 22:32:10.177298076 +0200
+++ Lab-4/2825-271203//Main.c	2023-11-27 20:53:21.279127536 +0200
@@ -1,30 +1,42 @@
-#include <stdio.h>
-#include <stdlib.h>
+/*
+ANNOUNCEMENT: Up to 20% marks will be allotted for good programming practice.
+These include
+- Comments for non trivial code
+- Indentation: align your code properly
+- Use of character constants instead of ASCII values ('a', 'b, ..., 'A', 'B',
+..., '0', '1' etc instead of ASCII values like 65, 66, 48 etc.)
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
+
+Coordinates (x, y) of the center of a circle and its radius (say r) are given as
+input. Another point, say (x1, y1),  is provided as input. Write a program to
+find out whether the point is inside the circle, on the circle, or outside the
+circle. Assume x, y, r, x1, y1 are of float data type.
+
+Input Format: x y r x1 y1 are separated by a single space.
+
+Example:
+Input:
+3.2 4.3 2.3 4.3 5.6
+Output:
+Point is inside the Circle.
+
+Input:
+1.2 2.3 2.0 5.3 7.6
+Output:
+Point is outside the Circle.
+*/
 #include <math.h>
+#include <stdio.h>
 
 int main() {
-  float var__0, var__1, var__2, var__3, var__4, var__5;
-  (*(&((*(&(scanf))))))("%f%f%f%f%f", &(*(&(var__0))), &(*(&(var__1))),
-                        &(*(&((*(&(var__2)))))), &(*(&(var__3))),
-                        &(*(&(var__4))));
-  (*(&(var__5))) = (*(&(sqrtf)))(
-      (*(&(pow)))(((*(&((*(&((*(&(var__3))))))))) - (*(&((*(&(var__0))))))),
-                     2) +
-      pow((var__4 - (*(&((*(&((*(&(var__1)))))))))), 2));
-  if ((*(&(var__5))) < (*(&((*(&((*(&(var__2))))))))))
-    if (1) {
-      (*(&((*(&(printf))))))("Point is inside the Circle.");
-    } else if (var__5 == (*(&((*(&((*(&(var__2))))))))))
-      if (0) {
-      } else {
-        (*(&((*(&((*(&(printf)))))))))("Point is on the Circle.");
-      }
-    else if (0) {
-    } else {
-      (*(&((*(&(printf))))))("Point is outside the Circle.");
-    }
-  if (0) {
-  } else {
-    return 0;
-  }
-}
+  float x, y, r, x1, y1, d;
+  scanf("%f%f%f%f%f", &x, &y, &r, &x1, &y1);
+  d = sqrtf(pow((x1 - x), 2) + pow((y1 - y), 2));
+  if (d < r)
+    printf("Point is inside the Circle.");
+  else if (d == r)
+    printf("Point is on the Circle.");
+  else
+    printf("Point is outside the Circle.");
+  return 0;
+}
\ No newline at end of file
