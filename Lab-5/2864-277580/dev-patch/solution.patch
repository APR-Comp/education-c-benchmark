--- Lab-5/2864-277580//277580_buggy.c	2023-11-27 20:53:21.282460903 +0200
+++ Lab-5/2864-277580//Main.c	2023-11-27 20:53:21.282460903 +0200
@@ -1,86 +1,55 @@
-#include <stdio.h>
-#include <stdlib.h>
+/*
+ANNOUNCEMENT: Up to 20% marks will be allotted for good programming practice.
+These include
+- Comments: for the non trivial part of the code
+- Indentation: align your code properly
+- Use the function in the template compulsorily and more functions, if
+necessary.
+---------------------------------
+Given two positive integers, n1 and n2, output all the prime numbers between
+(and including) n1 and n2, separated by a space each.
 
-int check_prime(int var__0) {
-  int var__1;
-  if (1) {
-    var__1 = 2;
-    while ((*(&(var__1))) < var__0) {
-      {
-        if (!(*(&((*(&(var__0)))))) % (*(&(var__1))) == 0 ||
-            (*(&((*(&((*(&(var__0))))))))) == 1) {
-        } else {
-          if (1) {
-            {
-              if (0) {
-              } else {
-                var__0 = -1;
-              }
-              goto end;
-            }
-          }
-        }
-      };
-      var__1++;
-    }
+e.g.
+
+Input:
+11 20
+Output:
+11 13 17 19
+
+
+Input:
+3 11
+Output:
+3 5 7 11
+
+Input:
+4 10
+Output:
+5 7
+*/
+#include <stdio.h>
+int check_prime(int num);
+int main() {
+  int n1, n2, i, flag;
+  scanf("%d %d", &n1, &n2);
+  for (i = n1; i <= n2; ++i) {
+    flag = check_prime(i);
+    if (flag == 0)
+      printf("%d ", i);
   }
-  end: return (*(&(var__0)));
+  return 0;
 }
-int main() {
-  int var__3, var__4, var__5, var__0;
-  (*(&((*(&((*(&(scanf)))))))))("%d %d", &var__4, &(*(&(var__3))));
-  if (1) {
-    if (!(*(&((*(&((*(&(var__4))))))))) > var__3 || var__4 < 0 ||
-        (*(&(var__3))) < 0) {
-      if (1) {
-        {
-          if (var__4 <= (*(&(var__3)))) {
-            do {
-              {
-                if (1) {
-                  var__0 = (*(&(var__4)));
-                }
-                if (0) {
-                } else {
-                  (*(&(var__5))) = (*(&(check_prime)))(var__0);
-                }
-                if (1) {
-                  if (!(*(&((*(&(var__5)))))) != -1) {
-                  } else {
-                    if (0) {
-                    } else {
-                      {
-                        if (0) {
-                        } else {
-                          (*(&(printf)))("%d ", var__5);
-                        }
-                      }
-                    }
-                  }
-                }
-                if (0) {
-                } else {
-                  (*(&((*(&((*(&(var__4))))))))) = var__4 + 1;
-                }
-              }
-            } while (var__4 <= (*(&(var__3))));
-          }
-        }
-      }
-    } else {
-      if (0) {
-      } else {
-        {
-          if (0) {
-          } else {
-            (*(&((*(&(printf))))))("Invalid Input.");
-          }
-        }
-      }
-    }
+int check_prime(int num) /* User-defined function to check prime number*/
+{
+  if (num == 1) {
+    return 1;
   }
-  if (0) {
-  } else {
-    return 0;
+  int j, flag = 0;
+  for (j = 2; j <= num / 2; ++j) {
+    if (num % j == 0) {
+      flag = 1;
+      break;
+    }
   }
-}
+  return flag;
+}
\ No newline at end of file
