--- Lab-5/2864-277528//277528_buggy.c	2023-11-27 20:53:21.282460903 +0200
+++ Lab-5/2864-277528//Main.c	2023-11-27 20:53:21.282460903 +0200
@@ -1,43 +1,55 @@
-/*numPass=4, numTotal=5
-Verdict:ACCEPTED, Visibility:1, Input:"3 23", ExpOutput:"3 5 7 11 13 17 19 23 ",
-Output:"3 5 7 11 13 17 19 23 " Verdict:ACCEPTED, Visibility:1, Input:"5 31",
-ExpOutput:"5 7 11 13 17 19 23 29 31 ", Output:"5 7 11 13 17 19 23 29 31 "
-Verdict:WRONG_ANSWER, Visibility:1, Input:"1  20", ExpOutput:"2 3 5 7 11 13 17
-19 ", Output:"1 2 3 5 7 11 13 17 19 " Verdict:ACCEPTED, Visibility:0, Input:"23
-57", ExpOutput:"23 29 31 37 41 43 47 53 ", Output:"23 29 31 37 41 43 47 53 "
-Verdict:ACCEPTED, Visibility:0, Input:"31 47", ExpOutput:"31 37 41 43 47 ",
-Output:"31 37 41 43 47 "
-*/
-#include <stdio.h>
+/*
+ANNOUNCEMENT: Up to 20% marks will be allotted for good programming practice.
+These include
+- Comments: for the non trivial part of the code
+- Indentation: align your code properly
+- Use the function in the template compulsorily and more functions, if
+necessary.
+---------------------------------
+Given two positive integers, n1 and n2, output all the prime numbers between
+(and including) n1 and n2, separated by a space each.
 
-int check_prime(int num);
-void print_prime(int n1, int n2);
+e.g.
 
-int check_prime(int num) {
-  /* The function returns 1 if num is prime otherwise it return 0 */
-  int i; // i: for the iteration in for loop
-  for (i = 2; i < num; i++) {
-    if (num % i == 0) {
-      return 0;
-      /* if the number would be divisible it won't be prime */
-    }
-  }
-  return 1;
-}
+Input:
+11 20
+Output:
+11 13 17 19
 
-void print_prime(int n1, int n2) {
-  /* The function calls function check_prime()
-     and prints prime numbers */
-  int i; // for the iteration in for loop
-  for (i = n1; i <= n2; i++) {
-    if (check_prime(i))
-      printf("%d ", i);
-  }
-}
 
+Input:
+3 11
+Output:
+3 5 7 11
+
+Input:
+4 10
+Output:
+5 7
+*/
+#include <stdio.h>
+int check_prime(int num);
 int main() {
-  int n1, n2;              // To store the input limits
-  scanf("%d%d", &n1, &n2); // to receive input from user
-  print_prime(n1, n2);
+  int n1, n2, i, flag;
+  scanf("%d %d", &n1, &n2);
+  for (i = n1; i <= n2; ++i) {
+    flag = check_prime(i);
+    if (flag == 0)
+      printf("%d ", i);
+  }
   return 0;
+}
+int check_prime(int num) /* User-defined function to check prime number*/
+{
+  if (num == 1) {
+    return 1;
+  }
+  int j, flag = 0;
+  for (j = 2; j <= num / 2; ++j) {
+    if (num % j == 0) {
+      flag = 1;
+      break;
+    }
+  }
+  return flag;
 }
\ No newline at end of file
