--- Lab-9/3108-300755//300755_buggy.c	2023-11-27 20:53:21.299127736 +0200
+++ Lab-9/3108-300755//Main.c	2023-11-27 20:53:21.299127736 +0200
@@ -1,72 +1,51 @@
+/*
+Up to 20% marks will be allotted for good programming practice. These include
+ - Comments: for nontrivial code
+ - Indentation: align your code properly
+ - Function use and modular programming
+ - Do not include anything in the header other than what is already given in the
+template.
+
+- You have to solve this problem using recursion
+- Some marks are reserved for writing correct base case and recursive step
+-----------------------------------------------------------------------------------------------------------
+
+Given an array of ints, is it possible to divide the ints into two groups, so
+that the sums of the two groups are the same. First Line of input will be an
+integer $n$, denoting the number of elements in array. Next line will consist of
+$n$ space separated integers. As output you have to print either "YES" or "NO".
+Assume : $n \leq 20$
+
+Input :
+4
+1 2 3 4
+Output :
+YES
+
+Input :
+3
+2 3 4
+Output :
+NO
+*/
 #include <stdio.h>
-#include <stdlib.h>
 
-int var__0, var__1[20];
-int checksum(int var__2[], int var__3, int var__4, int var__5) {
-  if (1) {
-    if (!(*(&((*(&(var__5)))))) > (*(&((*(&((*(&(var__3)))))))))) {
-      {
-      }
-    } else {
-      if (0) {
-      } else {
-        return 0;
-      }
-    }
-  }
-}
-int areSplitsEqual(int var__4, int var__6, int var__7) {
-  if ((*(&((*(&(var__4)))))) % 2 == 0)
-    if (1) {
-      {
-        if ((*(&(checksum)))((*(&((*(&((*(&(var__1))))))))), var__0,
-                             (*(&(var__4))) / 2, 1)) {
-          return 1;
-        } else {
-          if (0) {
-          } else {
-            return 0;
-          }
-        }
-      }
-    } else if (1) {
-      { return 0; }
-    }
+int n, array[20];
+
+int areSplitsEqual(int len, int sum_split_A, int sum_split_B) {
+  if (len == n)
+    return sum_split_A == sum_split_B;
+  else
+    return (areSplitsEqual(len + 1, sum_split_A + array[len], sum_split_B) ||
+            areSplitsEqual(len + 1, sum_split_A, sum_split_B + array[len]));
 }
+
 int main() {
-  if (1) {
-    (*(&((*(&((*(&(scanf)))))))))("%d", &(*(&((*(&((*(&(var__0))))))))));
-  }
-  int var__8 = 0;
-  if (var__8 < (*(&((*(&((*(&(var__0)))))))))) {
-    do {
-      {
-        scanf("%d", &var__1[var__8]);
-        (*(&(var__8))) = (*(&(var__8))) + 1;
-      }
-    } while (var__8 < (*(&((*(&((*(&(var__0))))))))));
-  }
-  int var__4 = 0;
-  int var__5 = 0;
-  if ((*(&((*(&((*(&(var__5))))))))) < var__0) {
-    do {
-      {
-        if (0) {
-        } else {
-          (*(&(var__4))) =
-              (*(&(var__4))) + var__1[(*(&((*(&((*(&(var__5)))))))))];
-        }
-        if (1) {
-          (*(&(var__5))) = var__5 + 1;
-        }
-      }
-    } while ((*(&((*(&((*(&(var__5))))))))) < var__0);
-  }
-  if (1) {
-    (*(&((*(&(printf))))))("%s\n",
-                           (*(&((*(&((*(&(areSplitsEqual)))))))))(
-                               (*(&((*(&((*(&(var__4))))))))), 0, 0) == 1
-                               ? "YES"
-                               : "NO");
-  }
+  int i;
+  scanf("%d", &n);
+  for (i = 0; i < n; i++)
+    scanf("%d", &array[i]);
+
+  i = areSplitsEqual(0, 0, 0);
+  printf("%s\n", i == 1 ? "YES" : "NO");
 }
