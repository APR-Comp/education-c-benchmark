--- Lab-9/3105-300058//300058_buggy.c	2023-11-27 20:53:21.295794370 +0200
+++ Lab-9/3105-300058//Main.c	2023-11-27 20:53:21.295794370 +0200
@@ -1,49 +1,56 @@
-/*numPass=0, numTotal=4
-Verdict:WRONG_ANSWER, Visibility:1, Input:"12
-Hello World", ExpOutput:"dlroW olleH
-
-", Output:"lroW olleH
-"
-Verdict:WRONG_ANSWER, Visibility:1, Input:"14
-baL noisruceR", ExpOutput:"Recursion Lab
-
-", Output:"ecursion Lab
-"
-Verdict:WRONG_ANSWER, Visibility:0, Input:"44
-The quick brown fox jumps over the lazy dog", ExpOutput:"god yzal eht revo spmuj
-xof nworb kciuq ehT
-
-", Output:"od yzal eht revo spmuj xof nworb kciuq ehT
-"
-Verdict:WRONG_ANSWER, Visibility:0, Input:"65
-esuoh sybstaG rof yaw edam dah taht seert eht seert dehsinav stI",
-ExpOutput:"Its vanished trees the trees that had made way for Gatsbys house
-
-", Output:"ts vanished trees the trees that had made way for Gatsbys house
-"
+/*
+Up to 20% marks will be allotted for good programming practice. These include
+ - Comments: for nontrivial code
+ - Indentation: align your code properly
+ - Function use and modular programming
+ - Do not include anything in the header other than what is already given in the
+template.
+
+- You have to solve this problem using recursion
+- Some marks are reserved for writing correct base case and recursive step
+-------------------------------------------------------------------------------------------
+
+Write a recursive C function to reverse a given string and then print it. The
+input consists of 2 lines: First line gives the length of the string; Second
+lines gives the string. The length of the string would not exceed 100
+characters.
+
+For Example:
+Input:
+6
+Hello
+Output:
+olleH
+
+Input:
+14
+baL noisruceR
+Output:
+Recursion Lab
 */
 #include <stdio.h>
 #include <string.h>
-void reverse_string(char str1[], char str2[], int k, int i) {
-  if (k < 0) {
-    str2[i] = '\0';
-    return;
-  }
-  str2[i] = str1[k];
-  reverse_string(str1, str2, k - 1, i + 1);
-}
+
+void reverse(char[], int, int);
 int main() {
-  int n;
-  scanf("%d", &n);
-  char str1[n], str2[n];
-  for (int i = 0; i < n - 1; i++) {
-    scanf("%c", &str1[i]);
-  }
+  char str[100];
+  int size, i;
+  scanf("%d", &size);
+  for (i = 0; i < size; i++)
+    scanf("%c", &str[i]);
+  str[size] = '\0';
+  reverse(str, 0, size - 1);
+  printf("%s\n", str);
+  return 0;
+}
 
-  reverse_string(str1, str2, n - 1, 0);
-  for (int i = 0; i < n; i++) {
-    printf("%c", str2[i]);
+void reverse(char str1[], int index, int size) {
+  char temp;
+  temp = str1[index];
+  str1[index] = str1[size - index];
+  str1[size - index] = temp;
+  if (index == size / 2) {
+    return;
   }
-
-  return 0;
+  reverse(str1, index + 1, size);
 }
\ No newline at end of file
